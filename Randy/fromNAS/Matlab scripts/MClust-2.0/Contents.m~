% MClust
%
% ADR 1998-2000
%
% Version 2.1
% Status: PROMOTED (Release version) 
%
% This code copyright A. David Redish, 1998-2000.
%
% Neither the author, the Neural Systems, Memory and Aging program, nor
% the University of Arizona assume any liabilities for this code.
% Use at your own risk.  We have done our best to ensure that this 
% code is correct, but do not make any guarantees.
%
% Use of this code should be acknowledged in any paper that uses
% data analyzed with it.  Acknowledgement should be 
% in the methods section as "(MClust, A. D. Redish)".
% 
% This code may not be distributed without the express written consent
% of the author (A. David Redish).  This code may not be modified without
% the express written consent of the author.  [However, MClust is designed
% to facilitate the incorporation of new features and new cutting methods.  
% If you have such a new feature or cutting method that you wish to include, 
% please contact me. - adr]
%
% Send bug reports, questions, and comments to "adr@nsma.arizona.edu".
% Neither the author, the Neural Systems, Memory and Aging program, nor
% the University of Arizona assume any responsibility for replying
% to such email, to fixing said bug-reports, or to maintaining this code.
% This code is distributed as is.  [However, I will reply if I have time.
% I will do my best to fix bugs, answer questions, incorporate new features
% and cutters, etc. - adr]
%
% --------------------------------------------------------------------
%
% MClust is written in Matlab (MathWorks Inc.) and requires version 5.3 
% or higher.  Some functions will require the statistical toolbox as well
% (available from MathWorks).  MClust has been tested on Sun Unix workstations
% running SunOS (Sun Microsystems Inc.) and on PC workstations running 
% Windows 95 (Microsoft) and Windows NT (Microsoft).  
%
% MClust reads files generated by the DataWave (DataWave Technologies Inc.) 
% and Cheetah (Neuralynx) neurophysiology recording systems, 
% including data generated from tetrodes, stereotrodes, and single 
% electrodes.  It ouputs "t-files", which contain (after a header) a list
% of timestamps in binary format.  Timestamps are 32-bit longs at a resolution
% of 10 timestamps/ms. Nothing has to be done to the DataWave or Cheetah TT/ST/SE files 
% in order to load them into MClust.  
%
% From the matlab prompt, make sure that the MClust directory is in your matlab path.
% Then type "MClust" at the matlab prompt.  Running MClust will open a matlab window.  
% Click on "Load File" and load a TT file.  Then select some features from the IgnoreFeature 
% list (clicking on them will flip them back and forth from the IgnoreFeature list 
% to the UseFeature list, if there are features on the UseFeature list, 
% the ChooseFeature checkbox will be checked).  Then select which channels are valid and click
% on CalculateFeatures.  When this box is checked, you are ready to cut clusters.
%
% Click on a cutter (currently available manual cutting using convex hulls).  
% At any time you can click on ViewClusters which will give you 
% more ways to see your data.  When you are done, click on
% WriteFiles to save your data.
%
% WARNING: Matlab is inefficient about storing data. 
% I suggest leaving and re-entering matlab for each tetrode.
%
% The key to fast processing is large amounts of RAM.  Typically, 512MB of 
% memory can cut up to 200,000 spikes comfortably; 160 MB of memory
% can cut up to 50,000 spikes.  
%
% -------------------------------------------------------------------
% 
% Additional code for MClust was written by Peter Lipa and Stephen Cowen.
% We thank the NSMA lab for support and for extensive testing.
%
% -------------------------------------------------------------------
% VERSION CONTROL
% Jan 2000 ADR Version 2.0 released.
% Apr 2000 ADR Version 2.1 SubsampleTT bug fixed.  Was copying headers incorrectly.