
;; Function mexFunction

(note 2 0 4 "" NOTE_INSN_DELETED)

(insn 4 2 6 (set (reg/v:SI 68)
        (reg:SI 24 %i0)) 106 {*movsi_insn} (nil)
    (nil))

(insn 6 4 8 (set (reg/v:SI 69)
        (reg:SI 25 %i1)) 106 {*movsi_insn} (nil)
    (nil))

(insn 8 6 10 (set (reg/v:SI 70)
        (reg:SI 26 %i2)) 106 {*movsi_insn} (nil)
    (nil))

(insn 10 8 11 (set (reg/v:SI 71)
        (reg:SI 27 %i3)) 106 {*movsi_insn} (nil)
    (nil))

(note 11 10 12 "" NOTE_INSN_FUNCTION_BEG)

(note 12 11 14 "" NOTE_INSN_DELETED)

(note 14 12 16 "" NOTE_INSN_BLOCK_BEG)

(insn 16 14 17 (set (reg:CC 0 %g0)
        (compare:CC (reg/v:SI 70)
            (const_int 2))) 23 {*cmpsi_insn} (nil)
    (nil))

(jump_insn 17 16 19 (set (pc)
        (if_then_else (eq (reg:CC 0 %g0)
                (const_int 0))
            (label_ref 23)
            (pc))) 74 {*normal_branch} (nil)
    (nil))

(insn 19 17 20 (set (reg:SI 79)
        (high:SI (symbol_ref:SI ("*.LLC0")))) 85 {*sethi_si} (nil)
    (expr_list:REG_EQUAL (high:SI (symbol_ref:SI ("*.LLC0")))
        (nil)))

(insn 20 19 22 (set (reg:SI 8 %o0)
        (lo_sum:SI (reg:SI 79)
            (symbol_ref:SI ("*.LLC0")))) 82 {*lo_sum_si} (nil)
    (expr_list:REG_EQUAL (symbol_ref:SI ("*.LLC0"))
        (nil)))

(call_insn 22 20 23 (parallel[ 
            (call (mem:SI (symbol_ref:SI ("mexErrMsgTxt")))
                (const_int 0))
            (clobber (reg:SI 15 %o7))
        ] ) -1 (nil)
    (nil)
    (expr_list (use (reg:SI 8 %o0))
        (nil)))

(code_label 23 22 25 2 "")

(insn 25 23 26 (set (reg:CC 0 %g0)
        (compare:CC (reg/v:SI 68)
            (const_int 1))) 23 {*cmpsi_insn} (nil)
    (nil))

(jump_insn 26 25 28 (set (pc)
        (if_then_else (eq (reg:CC 0 %g0)
                (const_int 0))
            (label_ref 32)
            (pc))) 74 {*normal_branch} (nil)
    (nil))

(insn 28 26 29 (set (reg:SI 80)
        (high:SI (symbol_ref:SI ("*.LLC1")))) 85 {*sethi_si} (nil)
    (expr_list:REG_EQUAL (high:SI (symbol_ref:SI ("*.LLC1")))
        (nil)))

(insn 29 28 31 (set (reg:SI 8 %o0)
        (lo_sum:SI (reg:SI 80)
            (symbol_ref:SI ("*.LLC1")))) 82 {*lo_sum_si} (nil)
    (expr_list:REG_EQUAL (symbol_ref:SI ("*.LLC1"))
        (nil)))

(call_insn 31 29 32 (parallel[ 
            (call (mem:SI (symbol_ref:SI ("mexErrMsgTxt")))
                (const_int 0))
            (clobber (reg:SI 15 %o7))
        ] ) -1 (nil)
    (nil)
    (expr_list (use (reg:SI 8 %o0))
        (nil)))

(code_label 32 31 35 3 "")

(insn 35 32 37 (set (reg:SI 8 %o0)
        (mem/s:SI (plus:SI (reg/v:SI 71)
                (const_int 4)))) 106 {*movsi_insn} (nil)
    (nil))

(call_insn 37 35 39 (parallel[ 
            (set (reg:SI 8 %o0)
                (call (mem:SI (symbol_ref:SI ("mxGetM")))
                    (const_int 0)))
            (clobber (reg:SI 15 %o7))
        ] ) -1 (nil)
    (nil)
    (expr_list (use (reg:SI 8 %o0))
        (nil)))

(insn 39 37 41 (set (reg:SI 81)
        (reg:SI 8 %o0)) 106 {*movsi_insn} (nil)
    (nil))

(insn 41 39 43 (set (reg:SI 8 %o0)
        (mem/s:SI (plus:SI (reg/v:SI 71)
                (const_int 4)))) 106 {*movsi_insn} (nil)
    (nil))

(call_insn 43 41 45 (parallel[ 
            (set (reg:SI 8 %o0)
                (call (mem:SI (symbol_ref:SI ("mxGetN")))
                    (const_int 0)))
            (clobber (reg:SI 15 %o7))
        ] ) -1 (nil)
    (nil)
    (expr_list (use (reg:SI 8 %o0))
        (nil)))

(insn 45 43 47 (set (reg:SI 82)
        (reg:SI 8 %o0)) 106 {*movsi_insn} (nil)
    (nil))

(insn 47 45 49 (set (reg:SI 8 %o0)
        (reg:SI 81)) 106 {*movsi_insn} (nil)
    (insn_list:REG_LIBCALL 53 (nil)))

(insn 49 47 51 (set (reg:SI 9 %o1)
        (reg:SI 82)) 106 {*movsi_insn} (nil)
    (nil))

(call_insn/u 51 49 53 (parallel[ 
            (set (reg:SI 8 %o0)
                (call (mem:SI (symbol_ref:SI ("*.umul")))
                    (const_int 0)))
            (clobber (reg:SI 15 %o7))
        ] ) -1 (nil)
    (nil)
    (expr_list (use (reg:SI 9 %o1))
        (expr_list (use (reg:SI 8 %o0))
            (nil))))

(insn 53 51 54 (set (reg:SI 83)
        (reg:SI 8 %o0)) 106 {*movsi_insn} (nil)
    (insn_list:REG_RETVAL 47 (expr_list:REG_EQUAL (mult:SI (reg:SI 81)
                (reg:SI 82))
            (nil))))

(insn 54 53 55 (set (reg:CC 0 %g0)
        (compare:CC (reg:SI 83)
            (const_int 1))) 23 {*cmpsi_insn} (nil)
    (nil))

(jump_insn 55 54 57 (set (pc)
        (if_then_else (eq (reg:CC 0 %g0)
                (const_int 0))
            (label_ref 61)
            (pc))) 74 {*normal_branch} (nil)
    (nil))

(insn 57 55 58 (set (reg:SI 84)
        (high:SI (symbol_ref:SI ("*.LLC2")))) 85 {*sethi_si} (nil)
    (expr_list:REG_EQUAL (high:SI (symbol_ref:SI ("*.LLC2")))
        (nil)))

(insn 58 57 60 (set (reg:SI 8 %o0)
        (lo_sum:SI (reg:SI 84)
            (symbol_ref:SI ("*.LLC2")))) 82 {*lo_sum_si} (nil)
    (expr_list:REG_EQUAL (symbol_ref:SI ("*.LLC2"))
        (nil)))

(call_insn 60 58 61 (parallel[ 
            (call (mem:SI (symbol_ref:SI ("mexErrMsgTxt")))
                (const_int 0))
            (clobber (reg:SI 15 %o7))
        ] ) -1 (nil)
    (nil)
    (expr_list (use (reg:SI 8 %o0))
        (nil)))

(code_label 61 60 64 4 "")

(insn 64 61 66 (set (reg:SI 8 %o0)
        (mem:SI (reg/v:SI 71))) 106 {*movsi_insn} (nil)
    (nil))

(call_insn 66 64 68 (parallel[ 
            (set (reg:SI 8 %o0)
                (call (mem:SI (symbol_ref:SI ("mxGetM")))
                    (const_int 0)))
            (clobber (reg:SI 15 %o7))
        ] ) -1 (nil)
    (nil)
    (expr_list (use (reg:SI 8 %o0))
        (nil)))

(insn 68 66 70 (set (reg:SI 85)
        (reg:SI 8 %o0)) 106 {*movsi_insn} (nil)
    (nil))

(insn 70 68 72 (set (reg:SI 8 %o0)
        (mem:SI (reg/v:SI 71))) 106 {*movsi_insn} (nil)
    (nil))

(call_insn 72 70 74 (parallel[ 
            (set (reg:SI 8 %o0)
                (call (mem:SI (symbol_ref:SI ("mxGetN")))
                    (const_int 0)))
            (clobber (reg:SI 15 %o7))
        ] ) -1 (nil)
    (nil)
    (expr_list (use (reg:SI 8 %o0))
        (nil)))

(insn 74 72 76 (set (reg:SI 86)
        (reg:SI 8 %o0)) 106 {*movsi_insn} (nil)
    (nil))

(insn 76 74 78 (set (reg:SI 8 %o0)
        (reg:SI 85)) 106 {*movsi_insn} (nil)
    (insn_list:REG_LIBCALL 82 (nil)))

(insn 78 76 80 (set (reg:SI 9 %o1)
        (reg:SI 86)) 106 {*movsi_insn} (nil)
    (nil))

(call_insn/u 80 78 82 (parallel[ 
            (set (reg:SI 8 %o0)
                (call (mem:SI (symbol_ref:SI ("*.umul")))
                    (const_int 0)))
            (clobber (reg:SI 15 %o7))
        ] ) -1 (nil)
    (nil)
    (expr_list (use (reg:SI 9 %o1))
        (expr_list (use (reg:SI 8 %o0))
            (nil))))

(insn 82 80 87 (set (reg:SI 87)
        (reg:SI 8 %o0)) 106 {*movsi_insn} (nil)
    (insn_list:REG_RETVAL 76 (expr_list:REG_EQUAL (mult:SI (reg:SI 85)
                (reg:SI 86))
            (nil))))

(insn 87 82 89 (set (reg:SI 8 %o0)
        (mem:SI (reg/v:SI 71))) 106 {*movsi_insn} (nil)
    (nil))

(call_insn 89 87 91 (parallel[ 
            (set (reg:SI 8 %o0)
                (call (mem:SI (symbol_ref:SI ("mxGetPr")))
                    (const_int 0)))
            (clobber (reg:SI 15 %o7))
        ] ) -1 (nil)
    (nil)
    (expr_list (use (reg:SI 8 %o0))
        (nil)))

(insn 91 89 94 (set (reg/v:SI 77)
        (reg:SI 8 %o0)) 106 {*movsi_insn} (nil)
    (nil))

(insn 94 91 96 (set (reg:SI 8 %o0)
        (mem/s:SI (plus:SI (reg/v:SI 71)
                (const_int 4)))) 106 {*movsi_insn} (nil)
    (nil))

(call_insn 96 94 98 (parallel[ 
            (set (reg:SI 8 %o0)
                (call (mem:SI (symbol_ref:SI ("mxGetPr")))
                    (const_int 0)))
            (clobber (reg:SI 15 %o7))
        ] ) -1 (nil)
    (nil)
    (expr_list (use (reg:SI 8 %o0))
        (nil)))

(insn 98 96 101 (set (reg/v:SI 76)
        (reg:SI 8 %o0)) 106 {*movsi_insn} (nil)
    (nil))

(insn 101 98 103 (set (reg:SI 8 %o0)
        (const_int 1)) 106 {*movsi_insn} (nil)
    (expr_list:REG_EQUAL (const_int 1)
        (nil)))

(insn 103 101 105 (set (reg:SI 9 %o1)
        (const_int 1)) 106 {*movsi_insn} (nil)
    (expr_list:REG_EQUAL (const_int 1)
        (nil)))

(insn 105 103 107 (set (reg:SI 10 %o2)
        (const_int 0)) 106 {*movsi_insn} (nil)
    (expr_list:REG_EQUAL (const_int 0)
        (nil)))

(call_insn 107 105 109 (parallel[ 
            (set (reg:SI 8 %o0)
                (call (mem:SI (symbol_ref:SI ("mxCreateDoubleMatrix")))
                    (const_int 0)))
            (clobber (reg:SI 15 %o7))
        ] ) -1 (nil)
    (nil)
    (expr_list (use (reg:SI 10 %o2))
        (expr_list (use (reg:SI 9 %o1))
            (expr_list (use (reg:SI 8 %o0))
                (nil)))))

(insn 109 107 111 (set (reg:SI 88)
        (reg:SI 8 %o0)) 106 {*movsi_insn} (nil)
    (nil))

(insn 111 109 114 (set (mem:SI (reg/v:SI 69))
        (reg:SI 88)) 106 {*movsi_insn} (nil)
    (nil))

(insn 114 111 116 (set (reg:SI 8 %o0)
        (reg:SI 88)) 106 {*movsi_insn} (nil)
    (nil))

(call_insn 116 114 118 (parallel[ 
            (set (reg:SI 8 %o0)
                (call (mem:SI (symbol_ref:SI ("mxGetPr")))
                    (const_int 0)))
            (clobber (reg:SI 15 %o7))
        ] ) -1 (nil)
    (nil)
    (expr_list (use (reg:SI 8 %o0))
        (nil)))

(insn 118 116 121 (set (reg/v:SI 78)
        (reg:SI 8 %o0)) 106 {*movsi_insn} (nil)
    (nil))

(insn 121 118 123 (set (reg:DF 8 %o0)
        (mem:DF (reg/v:SI 76))) 118 {*movdf_insn} (nil)
    (nil))

(call_insn 123 121 125 (parallel[ 
            (set (reg:SI 8 %o0)
                (call (mem:SI (symbol_ref:SI ("mxIsFinite")))
                    (const_int 0)))
            (clobber (reg:SI 15 %o7))
        ] ) -1 (nil)
    (nil)
    (expr_list (use (reg:DF 8 %o0))
        (nil)))

(insn 125 123 126 (set (reg:SI 89)
        (reg:SI 8 %o0)) 106 {*movsi_insn} (nil)
    (nil))

(insn 126 125 127 (set (reg:CC 0 %g0)
        (compare:CC (reg:SI 89)
            (const_int 0))) 23 {*cmpsi_insn} (nil)
    (nil))

(jump_insn 127 126 129 (set (pc)
        (if_then_else (eq (reg:CC 0 %g0)
                (const_int 0))
            (label_ref 247)
            (pc))) 74 {*normal_branch} (nil)
    (nil))

(note 129 127 131 "" NOTE_INSN_DELETED)

(insn 131 129 133 (set (reg/v:SI 73)
        (const_int 0)) 106 {*movsi_insn} (nil)
    (expr_list:REG_EQUAL (const_int 0)
        (nil)))

(insn 133 131 261 (set (reg/v:SI 74)
        (plus:SI (reg:SI 87)
            (const_int -1))) 220 {addsi3} (nil)
    (nil))

(insn 261 133 262 (set (reg:SI 125)
        (plus:SI (reg:SI 87)
            (const_int -2))) 220 {addsi3} (nil)
    (nil))

(insn 262 261 263 (set (reg:CC 0 %g0)
        (compare:CC (reg/v:SI 73)
            (reg:SI 125))) 23 {*cmpsi_insn} (nil)
    (nil))

(jump_insn 263 262 135 (set (pc)
        (if_then_else (ge (reg:CC 0 %g0)
                (const_int 0))
            (label_ref 210)
            (pc))) 74 {*normal_branch} (nil)
    (nil))

(note 135 263 142 "" NOTE_INSN_LOOP_BEG)

(code_label 142 135 144 8 "")

(note 144 142 145 "" NOTE_INSN_DELETED)

(insn 145 144 146 (set (reg:SI 91)
        (plus:SI (reg/v:SI 73)
            (reg/v:SI 74))) -1 (nil)
    (nil))

(insn 146 145 147 (set (reg:SI 93)
        (ashiftrt:SI (reg:SI 91)
            (const_int 31))) -1 (nil)
    (nil))

(insn 147 146 148 (set (reg:SI 94)
        (lshiftrt:SI (reg:SI 93)
            (const_int 31))) -1 (nil)
    (nil))

(insn 148 147 149 (set (reg:SI 95)
        (plus:SI (reg:SI 91)
            (reg:SI 94))) -1 (nil)
    (nil))

(insn 149 148 150 (set (reg:SI 92)
        (ashiftrt:SI (reg:SI 95)
            (const_int 1))) -1 (nil)
    (expr_list:REG_EQUAL (div:SI (reg:SI 91)
            (const_int 2))
        (nil)))

(insn 150 149 152 (set (reg:DF 96)
        (float:DF (reg:SI 92))) -1 (nil)
    (nil))

(insn 152 150 154 (set (reg:DF 8 %o0)
        (reg:DF 96)) -1 (nil)
    (nil))

(call_insn 154 152 156 (parallel[ 
            (set (reg:DF 32 %f0)
                (call (mem:SI (symbol_ref:SI ("floor")))
                    (const_int 0)))
            (clobber (reg:SI 15 %o7))
        ] ) -1 (nil)
    (nil)
    (expr_list (use (reg:DF 8 %o0))
        (nil)))

(insn 156 154 157 (set (reg:DF 97)
        (reg:DF 32 %f0)) -1 (nil)
    (nil))

(insn 157 156 161 (set (reg/v:SI 75)
        (fix:SI (fix:DF (reg:DF 97)))) -1 (nil)
    (nil))

(insn 161 157 163 (set (reg:SI 99)
        (ashift:SI (reg/v:SI 75)
            (const_int 3))) -1 (nil)
    (expr_list:REG_EQUAL (mult:SI (reg/v:SI 75)
            (const_int 8))
        (nil)))

(insn 163 161 165 (set (reg:DF 100)
        (mem:DF (reg/v:SI 76))) -1 (nil)
    (nil))

(insn 165 163 166 (set (reg:DF 101)
        (mem/s:DF (plus:SI (reg/v:SI 77)
                (reg:SI 99)))) -1 (nil)
    (nil))

(insn 166 165 167 (set (reg:CCFP 0 %g0)
        (compare:CCFP (reg:DF 100)
            (reg:DF 101))) -1 (nil)
    (nil))

(jump_insn 167 166 170 (set (pc)
        (if_then_else (ne (reg:CCFP 0 %g0)
                (const_int 0))
            (label_ref 173)
            (pc))) -1 (nil)
    (nil))

(insn 170 167 172 (set (reg/v:SI 74)
        (reg/v:SI 75)) -1 (nil)
    (nil))

(insn 172 170 173 (set (reg/v:SI 73)
        (reg/v:SI 74)) -1 (nil)
    (nil))

(code_label 173 172 177 9 "")

(insn 177 173 179 (set (reg:SI 103)
        (ashift:SI (reg/v:SI 75)
            (const_int 3))) -1 (nil)
    (expr_list:REG_EQUAL (mult:SI (reg/v:SI 75)
            (const_int 8))
        (nil)))

(insn 179 177 181 (set (reg:DF 104)
        (mem:DF (reg/v:SI 76))) -1 (nil)
    (nil))

(insn 181 179 182 (set (reg:DF 105)
        (mem/s:DF (plus:SI (reg/v:SI 77)
                (reg:SI 103)))) -1 (nil)
    (nil))

(insn 182 181 183 (set (reg:CCFPE 0 %g0)
        (compare:CCFPE (reg:DF 104)
            (reg:DF 105))) -1 (nil)
    (nil))

(jump_insn 183 182 186 (set (pc)
        (if_then_else (lt (reg:CCFPE 0 %g0)
                (const_int 0))
            (pc)
            (label_ref 187))) -1 (nil)
    (nil))

(insn 186 183 187 (set (reg/v:SI 74)
        (reg/v:SI 75)) -1 (nil)
    (nil))

(code_label 187 186 191 10 "")

(insn 191 187 193 (set (reg:SI 107)
        (ashift:SI (reg/v:SI 75)
            (const_int 3))) -1 (nil)
    (expr_list:REG_EQUAL (mult:SI (reg/v:SI 75)
            (const_int 8))
        (nil)))

(insn 193 191 195 (set (reg:DF 108)
        (mem:DF (reg/v:SI 76))) -1 (nil)
    (nil))

(insn 195 193 196 (set (reg:DF 109)
        (mem/s:DF (plus:SI (reg/v:SI 77)
                (reg:SI 107)))) -1 (nil)
    (nil))

(insn 196 195 197 (set (reg:CCFPE 0 %g0)
        (compare:CCFPE (reg:DF 108)
            (reg:DF 109))) -1 (nil)
    (nil))

(jump_insn 197 196 200 (set (pc)
        (if_then_else (gt (reg:CCFPE 0 %g0)
                (const_int 0))
            (pc)
            (label_ref 136))) -1 (nil)
    (nil))

(insn 200 197 203 (set (reg/v:SI 73)
        (reg/v:SI 75)) -1 (nil)
    (nil))

(note 203 200 136 "" NOTE_INSN_LOOP_CONT)

(code_label 136 203 266 6 "")

(note 266 136 137 "" NOTE_INSN_LOOP_VTOP)

(insn 137 266 138 (set (reg/s:SI 90)
        (plus:SI (reg/v:SI 74)
            (const_int -1))) -1 (nil)
    (nil))

(insn 138 137 139 (set (reg:CC 0 %g0)
        (compare:CC (reg/v:SI 73)
            (reg/s:SI 90))) -1 (nil)
    (nil))

(jump_insn 139 138 209 (set (pc)
        (if_then_else (lt (reg:CC 0 %g0)
                (const_int 0))
            (label_ref 142)
            (pc))) -1 (nil)
    (nil))

(note 209 139 210 "" NOTE_INSN_LOOP_END)

(code_label 210 209 214 7 "")

(insn 214 210 216 (set (reg:SI 111)
        (ashift:SI (reg/v:SI 73)
            (const_int 3))) 330 {ashlsi3} (nil)
    (expr_list:REG_EQUAL (mult:SI (reg/v:SI 73)
            (const_int 8))
        (nil)))

(insn 216 214 218 (set (reg:DF 113)
        (mem:DF (reg/v:SI 76))) 118 {*movdf_insn} (nil)
    (nil))

(insn 218 216 219 (set (reg:DF 114)
        (mem/s:DF (plus:SI (reg/v:SI 77)
                (reg:SI 111)))) 118 {*movdf_insn} (nil)
    (nil))

(insn 219 218 222 (set (reg:DF 112)
        (minus:DF (reg:DF 113)
            (reg:DF 114))) 311 {subdf3} (nil)
    (nil))

(insn 222 219 224 (set (reg:SI 116)
        (ashift:SI (reg/v:SI 74)
            (const_int 3))) 330 {ashlsi3} (nil)
    (expr_list:REG_EQUAL (mult:SI (reg/v:SI 74)
            (const_int 8))
        (nil)))

(insn 224 222 227 (set (reg:DF 118)
        (mem/s:DF (plus:SI (reg/v:SI 77)
                (reg:SI 116)))) 118 {*movdf_insn} (nil)
    (nil))

(insn 227 224 228 (set (reg:DF 117)
        (minus:DF (reg:DF 118)
            (reg:DF 113))) 311 {subdf3} (nil)
    (nil))

(insn 228 227 229 (set (reg:CCFPE 0 %g0)
        (compare:CCFPE (reg:DF 112)
            (reg:DF 117))) 25 {*cmpdf_fpe_sp32} (nil)
    (nil))

(jump_insn 229 228 231 (set (pc)
        (if_then_else (le (reg:CCFPE 0 %g0)
                (const_int 0))
            (pc)
            (label_ref 237))) 75 {*inverted_branch} (nil)
    (nil))

(insn 231 229 232 (set (reg:SI 120)
        (plus:SI (reg/v:SI 73)
            (const_int 1))) 220 {addsi3} (nil)
    (nil))

(insn 232 231 234 (set (reg:DF 121)
        (float:DF (reg:SI 120))) 194 {floatsidf2} (nil)
    (nil))

(insn 234 232 235 (set (mem:DF (reg/v:SI 78))
        (reg:DF 121)) 118 {*movdf_insn} (nil)
    (nil))

(jump_insn 235 234 236 (set (pc)
        (label_ref 255)) -1 (nil)
    (nil))

(barrier 236 235 237)

(code_label 237 236 239 13 "")

(insn 239 237 240 (set (reg:SI 122)
        (plus:SI (reg/v:SI 74)
            (const_int 1))) 220 {addsi3} (nil)
    (nil))

(insn 240 239 242 (set (reg:DF 123)
        (float:DF (reg:SI 122))) 194 {floatsidf2} (nil)
    (nil))

(insn 242 240 245 (set (mem:DF (reg/v:SI 78))
        (reg:DF 123)) 118 {*movdf_insn} (nil)
    (nil))

(jump_insn 245 242 246 (set (pc)
        (label_ref 255)) -1 (nil)
    (nil))

(barrier 246 245 247)

(code_label 247 246 250 5 "")

(call_insn 250 247 252 (parallel[ 
            (set (reg:DF 32 %f0)
                (call (mem:SI (symbol_ref:SI ("mxGetNaN")))
                    (const_int 0)))
            (clobber (reg:SI 15 %o7))
        ] ) -1 (nil)
    (nil)
    (nil))

(insn 252 250 254 (set (reg:DF 124)
        (reg:DF 32 %f0)) 118 {*movdf_insn} (nil)
    (nil))

(insn 254 252 255 (set (mem:DF (reg/v:SI 78))
        (reg:DF 124)) 118 {*movdf_insn} (nil)
    (nil))

(code_label 255 254 257 15 "")

(note 257 255 0 "" NOTE_INSN_BLOCK_END)
